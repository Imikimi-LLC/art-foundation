# generated by Neptune Namespaces
# this file: tests/art/foundation/index.coffee

module.exports =
Foundation                         = require './namespace'
Foundation.Async                   = require './async'
Foundation.Binary                  = require './binary'
Foundation.Browser                 = require './browser'
Foundation.Inspect                 = require './inspect'
Foundation.Array                   = require './array'
Foundation.BaseObject              = require './base_object'
Foundation.BatchLoader             = require './batch_loader'
Foundation.CallStack               = require './call_stack'
Foundation.Clone                   = require './clone'
Foundation.Epoch                   = require './epoch'
Foundation.Eq                      = require './eq'
Foundation.Hash                    = require './hash'
Foundation.JsonStore               = require './json_store'
Foundation.Map                     = require './map'
Foundation.Math                    = require './math'
Foundation.PlainData               = require './plain_data'
Foundation.Promise                 = require './promise'
Foundation.Regexp                  = require './regexp'
Foundation.Ruby                    = require './ruby'
Foundation.SequencedEventManager   = require './sequenced_event_manager'
Foundation.Stat                    = require './stat'
Foundation.String                  = require './string'
Foundation.Time                    = require './time'
Foundation.Transaction             = require './transaction'
Foundation.Types                   = require './types'
Foundation.Unique                  = require './unique'
Foundation.WebWorker               = require './web_worker'
Foundation.WorkerForWorkerRpcTests = require './worker_for_worker_rpc_tests'
Foundation.WorkerRpc               = require './worker_rpc'
Foundation.finishLoad(
  ["Array","BaseObject","BatchLoader","CallStack","Clone","Epoch","Eq","Hash","JsonStore","Map","Math","PlainData","Promise","Regexp","Ruby","SequencedEventManager","Stat","String","Time","Transaction","Types","Unique","WebWorker","WorkerForWorkerRpcTests","WorkerRpc"]
  ["Async","Binary","Browser","Inspect"]
)